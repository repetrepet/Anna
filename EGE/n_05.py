# Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму.
# 1.  Строится восьмибитная двоичная запись числа N.
# 2.  Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3.  Полученное число переводится в десятичную запись.
# 4.  Из нового числа вычитается исходное, полученная разность выводится на экран.

# Пример. Дано число N  =  13. Алгоритм работает следующим образом.
# 1.  Восьмибитная двоичная запись числа N: 00001101.
# 2.  Все цифры заменяются на противоположные, новая запись: 11110010.
# 3.  Десятичное значение полученного числа 242.
# 4.  На экран выводится число 242 − 13  =  229.

# Какое число нужно ввести в автомат, чтобы в результате получилось 111?

# 101 = 5         двоичное число
# 00000101 = 5    двоичнчое восьмибитное число

for n in range(0, 256):
  x = bin(n)[2:]
  x = '0' * (8 - len(x)) + x # дописываем слева нули до 8 разрядов
  
  # инвертируем разряды
  x = x.replace('0', '*')
  x = x.replace('1', '0')
  x = x.replace('*', '1')
  
  r = int(x, 2)
  if r - n == 111:
    print(n) 
    break

# ========================================================================

# Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
# 1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
# 2. Полученные два числа записываются друг за другом в порядке убывания (без разделителей).
# Пример. Исходное число: 348. Суммы: 3+4=7; 4+8=12. Результат: 127.
# Укажите наименьшее число, в результате обработки которого автомат выдаст число 1412.

for n in range(100, 1000):         # Перебираем все трехзначные числа
    x = str(n)                     # Преобразуем число в строку для работы с отдельными цифрами
    
    a = int(x[0])                  # Первая цифра числа
    b = int(x[1])                  # Вторая цифра числа
    c = int(x[2])                  # Третья цифра числа

    sum1 = a + b                   # Сумма первой и второй цифр
    sum2 = b + c                   # Сумма второй и третьей цифр

    # Альтернативное решение:
    # first = str(max(sum1, sum2))  # Большая сумма становится первой частью результата
    # second = str(min(sum1, sum2)) # Меньшая сумма становится второй частью результата
    # s1 = first + second           # Объединяем суммы в порядке убывания
    
    l = [sum1, sum2]               # Создаем список из двух сумм
    l.sort()                       # Сортируем список по возрастанию
    r = str(l[1]) + str(l[0])      # Формируем результат: большая сумма + меньшая сумма
    
    if r == '1412':                # Если результат равен 1412
        print(n)                   # Выводим найденное число
        break                      # Прерываем цикл после нахождения первого подходящего числа

# Ответ: 395


# (альтернативное решение)
for i in range(100, 1000):         # Перебираем все трехзначные числа
    s = str(i)                     # Преобразуем число в строку
    
    k1 = int(s[0]) + int(s[1])     # Сумма первой и второй цифр
    k2 = int(s[1]) + int(s[2])     # Сумма второй и третьей цифр
    
    first = str(max(k1, k2))       # Находим большую сумму
    second = str(min(k1, k2))      # Находим меньшую сумму
    s1 = first + second            # Объединяем суммы в порядке убывания
    
    if s1 == '1412':               # Если результат равен 1412
        print(i)                   # Выводим найденное число
        break                      # Прерываем цикл после нахождения первого подходящего числа

# Ответ: 395

# ========================================================================

# ЗАДАЧА 3
# Автомат получает на вход четырёхзначное число (число не может начинаться с нуля). 
# По этому числу строится новое число по следующим правилам.
# 1. Складываются отдельно первая и вторая, вторая и третья, третья и четвёртая цифры заданного числа.
# 2. Наименьшая из полученных трёх сумм удаляется.
# 3. Оставшиеся две суммы записываются друг за другом в порядке неубывания без разделителей.
# Пример. Исходное число: 1984. Суммы: 1+9=10, 9+8=17, 8+4=12. Удаляется 10. Результат: 1217.
# Укажите наибольшее число, при обработке которого автомат выдаёт результат 613.

for i in range(9999, 1000, -1):    # Перебираем четырехзначные числа от большего к меньшему
    s = str(i)                     # Преобразуем число в строку
    
    k1 = int(s[0]) + int(s[1])     # Сумма первой и второй цифр
    k2 = int(s[1]) + int(s[2])     # Сумма второй и третьей цифр
    k3 = int(s[2]) + int(s[3])     # Сумма третьей и четвертой цифр
    
    l = [k1, k2, k3]               # Создаем список из трех сумм
    l.sort()                       # Сортируем список по возрастанию
    result = str(l[1]) + str(l[2]) # Формируем результат из двух больших сумм (порядок неубывания)
    
    if result == '613':            # Если результат равен 613
        print(i)                   # Выводим найденное число
        break                      # Прерываем цикл после нахождения первого подходящего числа

# Ответ: 9421


# (альтернативное решение)
for i in range(9999, 1000, -1):    # Перебираем четырехзначные числа от большего к меньшему
    s = str(i)                     # Преобразуем число в строку
    
    k1 = int(s[0]) + int(s[1])     # Сумма первой и второй цифр
    k2 = int(s[1]) + int(s[2])     # Сумма второй и третьей цифр
    k3 = int(s[2]) + int(s[3])     # Сумма третьей и четвертой цифр
    
    # Находим среднюю по величине сумму (сумма всех минус максимальная и минимальная)
    first = str(k1 + k2 + k3 - max(k1, k2, k3) - min(k1, k2, k3))
    second = str(max(k1, k2, k3))  # Максимальная сумма
    s1 = first + second            # Объединяем суммы в порядке неубывания
    
    if s1 == '613':                # Если результат равен 613
        print(i)                   # Выводим найденное число
        break                      # Прерываем цикл после нахождения первого подходящего числа

# Ответ: 9421




